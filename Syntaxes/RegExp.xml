<?xml version="1.0" encoding="UTF-8"?>
<syntax name="source.regexp.python">
    <zones>
        <zone name="keyword.control.anchor.regexp">
            <expression>\\[bBAZzG]|\^|\$</expression>
        </zone>
        <zone name="keyword.other.back-reference.regexp">
            <expression>\\[1-9][0-9]?</expression>
        </zone>
        <zone name="keyword.operator.quantifier.regexp">
            <expression>[?+*][?+]?|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</expression>
        </zone>
        <zone name="keyword.operator.or.regexp">
            <expression>\|</expression>
        </zone>
        <zone name="comment.block.regexp">
            <starts-with>
                <expression>\(\?\#</expression>
            </starts-with>
            <ends-with>
                <expression>\)</expression>
            </ends-with>
        </zone>
        <zone name="comment.line.number-sign.regexp">
            <expression>(?&lt;=^|\s)#\s[[a-zA-Z0-9,. \t?!-:][^\x{00}-\x{7F}]]*$</expression>
        </zone>
        <zone name="keyword.other.option-toggle.regexp">
            <expression>\(\?[iLmsux]+\)</expression>
        </zone>
        <zone name="keyword.other.back-reference.named.regexp">
            <expression>(\()(\?P=([a-zA-Z_][a-zA-Z_0-9]*\w*))(\))</expression>
        </zone>
        <zone name="meta.group.assertion.regexp">
            <starts-with>
                <expression>(\()((\?=)|(\?!)|(\?&lt;=)|(\?&lt;!))</expression>
                <capture number="1" name="punctuation.definition.group.regexp"/>
                <capture number="2" name="punctuation.definition.group.assertion.regexp"/>
                <capture number="3" name="meta.assertion.look-ahead.regexp"/>
                <capture number="4" name="meta.assertion.negative-look-ahead.regexp"/>
                <capture number="5" name="meta.assertion.look-behind.regexp"/>
                <capture number="6" name="meta.assertion.negative-look-behind.regexp"/>
            </starts-with>
            <ends-with>
                <expression>(\))</expression>
                <capture number="1" name="punctuation.definition.group.regexp"/>
            </ends-with>
            <subzones>
                <include syntax="$self"/>
            </subzones>
        </zone>
        <zone name="meta.group.assertion.conditional.regexp">
            <starts-with>
                <expression>(\()(\?\(([1-9][0-9]?|[a-zA-Z_][a-zA-Z_0-9]*)\))</expression>
                <capture number="1" name="punctuation.definition.group.regexp"/>
                <capture number="2" name="punctuation.definition.group.assertion.conditional.regexp"/>
                <capture number="3" name="entity.name.section.back-reference.regexp"/>
            </starts-with>
            <ends-with>
                <expression>(\))</expression>
            </ends-with>
            <subzones>
                <include syntax="$self"/>
            </subzones>
        </zone>
        <zone name="meta.group.regexp">
            <starts-with>
                <expression>(\()((\?P&lt;)([a-z]\w*)(>)|(\?:))?</expression>
                <capture number="1" name="punctuation.definition.group.regexp"/>
                <capture number="3" name="punctuation.definition.group.capture.regexp"/>
                <capture number="4" name="entity.name.section.group.regexp"/>
                <capture number="5" name="punctuation.definition.group.capture.regexp"/>
                <capture number="6" name="punctuation.definition.group.no-capture.regexp"/>
            </starts-with>
            <ends-with>
                <expression>(\))</expression>
                <capture number="1" name="punctuation.definition.group.regexp"/>
            </ends-with>
            <subzones>
                <include syntax="$self"/>
            </subzones>
        </zone>
        <include collection="character-class"/>
    </zones>
    <library>
        <collection name="character-class">
            <zone name="constant.character.character-class.regexp">
                <expression>\\[wWsSdDhH]|\.</expression>
            </zone>
            <zone name="constant.character.escape.backslash.regexp">
                <expression>\\.</expression>
            </zone>
            <zone name="constant.other.character-class.set.regexp">
                <starts-with>
                    <expression>(\[)(\^)?</expression>
                    <capture number="1" name="punctuation.definition.character-class.regexp"/>
                    <capture number="2" name="keyword.operator.negation.regexp"/>
                </starts-with>
                <ends-with>
                    <expression>(\])</expression>
                    <capture number="1" name="punctuation.definition.character-class.regexp"/>
                </ends-with>
                <subzones>
                    <include collection="character-class"/>
                    <zone name="constant.other.character-class.range.regexp">
                        <expression>((\\.)|.)\-((\\.)|[^\]])</expression>
                        <capture number="2" name="constant.character.escape.backslash.regexp"/>
                        <capture number="4" name="constant.character.escape.backslash.regexp"/>
                    </zone>
                </subzones>
            </zone>
        </collection>
    </library>
</syntax>